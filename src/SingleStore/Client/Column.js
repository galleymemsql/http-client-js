/**
 * SingleStore HTTP API Spec
 * This API allows you to execute SQL statements against a SingleStore database.  It supports all statements that can be run in a direct database connection, and uses conventional data type conversion.
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Column model module.
 * @module SingleStore/Client/Column
 * @version 2.0.0
 */
class Column {
    /**
     * Constructs a new <code>Column</code>.
     * An object describing a single column
     * @alias module:SingleStore/Client/Column
     * @param name {String} The name of the column
     * @param dataType {String} The data type of the column as documented https://docs.singlestore.com/managed-service/en/reference/sql-reference/data-types.html
     * @param nullable {Boolean} \"true\" if the value can be null, \"false\" otherwise
     */
    constructor(name, dataType, nullable) { 
        
        Column.initialize(this, name, dataType, nullable);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, dataType, nullable) { 
        obj['name'] = name;
        obj['dataType'] = dataType;
        obj['nullable'] = nullable;
    }

    /**
     * Constructs a <code>Column</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:SingleStore/Client/Column} obj Optional instance to populate.
     * @return {module:SingleStore/Client/Column} The populated <code>Column</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Column();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('dataType')) {
                obj['dataType'] = ApiClient.convertToType(data['dataType'], 'String');
            }
            if (data.hasOwnProperty('nullable')) {
                obj['nullable'] = ApiClient.convertToType(data['nullable'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * The name of the column
 * @member {String} name
 */
Column.prototype['name'] = undefined;

/**
 * The data type of the column as documented https://docs.singlestore.com/managed-service/en/reference/sql-reference/data-types.html
 * @member {String} dataType
 */
Column.prototype['dataType'] = undefined;

/**
 * \"true\" if the value can be null, \"false\" otherwise
 * @member {Boolean} nullable
 */
Column.prototype['nullable'] = undefined;






export default Column;

